{"version":3,"sources":["helper.js","Notes.js","PasswordOverlay.js","ExpandedOptions.js","Overlay.js","UploadImageOverlay.js","constants.js","Editor.js","extras/uploadImage.js","Search.js","App.js","index.js"],"names":["improvedSearch","str","searchedWord","lis","split","searchedWordLis","n","length","kn","i","word","toLowerCase","substr","console","log","k","i2","searchedCurrentWordLength","Note","props","note","setIsEditorActive","setEditingNote","deleteNote","onClick","obj","id","fmtext","isEncrypted","title","className","e","stopPropagation","rawtext","Notes","notes","noteArray","map","a","b","j","Math","random","toFixed","join","generate_token","PasswordOverlay","useState","pass","setPass","file","setFile","onSave","setIsoverlayActive","passwordNote","label","isInputJSON","handleChange","target","files","value","inputJSON","accept","type","onChange","autoFocus","ExpandedOptions","options","state","optionsArr","option","onclickEvent","icon","name","Overlay","setIsBaseOverlayActive","closeOverlayFn","OkOverlayFn","children","UploadImageSection","contentProps","setImageType","setImageURL","setURI","htmlFor","reader","FileReader","readAsDataURL","onload","result","UploadImageOverlay","imageURL","uri","imageType","setExpandedOptionsVisibilityState","setHtml","range","ihtml","SINGLE_SOURCE","Editor","ref","useRef","isSaveEnabled","setIsSaveEnabled","isoverlayActive","expandedOptionsVisibilityState","setRange","html","overlayType","setOverlayType","isEditorActive","editingNote","setNotes","isBaseOverlayActive","storeRange","rclone","window","getSelection","getRangeAt","cloneRange","encryptionState","setEncryptionState","useEffect","Object","keys","sel","rangeCount","deleteContents","el","document","createElement","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","appendChild","insertNode","setStartAfter","collapse","removeAllRanges","addRange","selection","createRange","pasteHTML","pasteHtmlAtCaret","save","encState","patt","updatedNotes","pos","findIndex","ele","undefined","replace","push","optionarr","singleNote","find","findNote","arrString","JSON","stringify","source","blob","Blob","url","URL","createObjectURL","link","download","href","click","alert","heading","editHTML","encryptedText","texto","CryptoJS","AES","encrypt","toString","decryptedText","decrypt","enc","Utf8","class","innerRef","onKeyPress","Search","setIsSearching","setSearchedNotes","searchValue","setSearchValue","sNotes","filter","placeholder","App","searchedNotes","isSearching","currentTheme","setCurrentTheme","idgenerate","setIdgenerate","isImportSingleNoteActive","setIsImportSingleNoteActive","isImportAllNoteActive","setIsImportAllNoteActive","splice","invertColors","theme","invertPercent","css","head","style","styleSheet","cssText","createTextNode","notestring","localStorage","getItem","noteobj","parse","currId","Number","setItem","fr","objNote","tempNotes","readAsText","noteID","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1bbaa5b5.chunk.js","sourcesContent":["export function generate_token(length) {\r\n  //edit the token allowed characters\r\n  const a =\r\n    \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".split(\"\");\r\n  const b = [];\r\n  for (let i = 0; i < length; i++) {\r\n    let j = (Math.random() * (a.length - 1)).toFixed(0);\r\n    b[i] = a[j];\r\n  }\r\n  return b.join(\"\");\r\n}\r\n\r\nexport const improvedSearch = (str, searchedWord) => {\r\n  //   console.time();\r\n  //   debugger;\r\n  // const str=\"He is a boy. This can be difficult. He can understand    this boy. This is it\"\r\n  let lis = str.split(/\\s+/);\r\n  // const searchedWord=\"this boy\"\r\n\r\n  const searchedWordLis = searchedWord.split(/\\s+/);\r\n\r\n  let n = lis.length;\r\n\r\n  let kn = searchedWordLis.length;\r\n  let i = 0;\r\n  for (let word of lis) {\r\n    if (\r\n      searchedWordLis[0].toLowerCase() === word.toLowerCase() ||\r\n      (kn === 1 &&\r\n        searchedWordLis[0].toLowerCase() ===\r\n          word.substr(0, searchedWordLis[0].length).toLowerCase())\r\n    ) {\r\n      console.log(\"true\");\r\n      let k = 0;\r\n      let i2 = i;\r\n\r\n      while (i < n && k < kn) {\r\n        console.log(searchedWordLis[k]);\r\n        console.log(lis[i2]);\r\n\r\n        const searchedCurrentWordLength = searchedWordLis[k].length;\r\n\r\n        if (\r\n          searchedWordLis[k].toLowerCase() === lis[i2].toLowerCase() ||\r\n          (k === kn - 1 &&\r\n            searchedWordLis[k].toLowerCase() ===\r\n              lis[i2].substr(0, searchedCurrentWordLength).toLowerCase())\r\n        ) {\r\n          k++;\r\n        } else {\r\n          break;\r\n        }\r\n        i2++;\r\n      }\r\n      if (k === kn) {\r\n        return true;\r\n      }\r\n    }\r\n    i++;\r\n  }\r\n\r\n  //   console.timeEnd();\r\n  return false;\r\n};\r\n\r\nexport const findNote = (editingNote, notes) => {\r\n  const note = notes.find((note) => note.id === editingNote.id);\r\n  return note;\r\n};\r\n","import \"./Notes.scss\";\r\n// import ReactHtmlParser from \"react-html-parser\";\r\nimport { generate_token } from \"./helper\";\r\nconst Note = (props) => {\r\n  const { note, setIsEditorActive, setEditingNote, deleteNote } = props;\r\n\r\n  const openCurrentNote = () => {\r\n    setIsEditorActive(true);\r\n    const obj = {\r\n      id: note.id,\r\n      fmtext: note.fmtext,\r\n      isEncrypted: note.isEncrypted,\r\n      title: note.title,\r\n    };\r\n    setEditingNote(obj);\r\n  };\r\n\r\n  return (\r\n    <div onClick={openCurrentNote} className=\"Note\">\r\n      <button\r\n        className=\"deleteCross\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          deleteNote(note.id);\r\n        }}\r\n      >\r\n        {\"\\u00D7\"}\r\n      </button>\r\n      <div className=\"titleSection\">{note.title}</div>\r\n      {/* <div className=\"noteSection\">{ReactHtmlParser(note.fmtext)}</div> */}\r\n      <div className=\"noteSection\">{note.rawtext}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Notes = (props) => {\r\n  const { notes, setIsEditorActive, setEditingNote, deleteNote } = props;\r\n\r\n  const noteArray = notes.map((note) => {\r\n    return (\r\n      <Note\r\n        setIsEditorActive={setIsEditorActive}\r\n        key={generate_token(5)}\r\n        note={note}\r\n        setEditingNote={setEditingNote}\r\n        deleteNote={deleteNote}\r\n      />\r\n    );\r\n  });\r\n\r\n  const emptyNoteMessage = () => {\r\n    return <div className=\"emptyMessage\">No notes here</div>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Notes\">\r\n      {noteArray && noteArray.length > 0 ? noteArray : emptyNoteMessage()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import { useState } from \"react\";\r\nimport \"./PasswordOverlay.scss\";\r\n\r\nconst PasswordOverlay = (props) => {\r\n  const [pass, setPass] = useState(\"\");\r\n  const [file, setFile] = useState({});\r\n  const { onSave, setIsoverlayActive, passwordNote, label, isInputJSON } =\r\n    props;\r\n\r\n  const handleChange = (e) => {\r\n    if (isInputJSON) {\r\n      console.log(e.target.files[0]);\r\n      setFile(e.target.files);\r\n    } else {\r\n      setPass(e.target.value);\r\n    }\r\n  };\r\n\r\n  const passwordSelect = () => {\r\n    if (\r\n      (isInputJSON && file.length === 0) ||\r\n      (!isInputJSON && pass.length === 0)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (isInputJSON) {\r\n      console.log(file);\r\n      onSave(file[0]);\r\n    } else {\r\n      onSave(pass);\r\n    }\r\n    setPass(\"\");\r\n    setFile({});\r\n  };\r\n\r\n  const inputJSON = (\r\n    <input\r\n      id=\"fileUploadSingle\"\r\n      className=\"fileUploadInput\"\r\n      accept=\".json\"\r\n      type=\"file\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className=\"PasswordOverlay\">\r\n      <div className=\"passwordBox\">\r\n        <div className=\"passwordSection\">\r\n          <label>{`${label}: `} </label>\r\n          {isInputJSON ? (\r\n            inputJSON\r\n          ) : (\r\n            <input autoFocus={true} type=\"text\" onChange={handleChange} />\r\n          )}\r\n        </div>\r\n        {passwordNote}\r\n        <div className=\"passwordButtons\">\r\n          <button onClick={passwordSelect} className=\"select\">\r\n            {\"OK \\u2713\"}\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setIsoverlayActive(false);\r\n              setPass(\"\");\r\n            }}\r\n            className=\"close\"\r\n          >\r\n            {\"Cancel \\u00D7\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordOverlay;\r\n","import { useState } from \"react\";\r\nimport \"./ExpandedOptions.scss\";\r\n\r\nfunction ExpandedOptions(props) {\r\n  const { options, state } = props;\r\n\r\n  const optionsArr = options.map((option) => {\r\n    // console.log()\r\n    return (\r\n      <button onClick={option.onclickEvent} className=\"list\">\r\n        <span className=\"icon\">\r\n          <i\r\n            className={`${option.icon ? `${option.icon}` : \"fa fa-circle\"}`}\r\n          ></i>\r\n        </span>\r\n        <span className=\"name\">{option.name}</span>\r\n      </button>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={`ExpandedOptions ${state ? \"active\" : \"\"}`}>\r\n      {optionsArr}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpandedOptions;\r\n","// import { useState } from \"react\";\r\nimport \"./Overlay.scss\";\r\n\r\nconst Overlay = (props) => {\r\n  const { setIsBaseOverlayActive, closeOverlayFn, OkOverlayFn } = props;\r\n\r\n  return (\r\n    <div className=\"Overlay\">\r\n      <div className=\"Box\">\r\n        {props.children}\r\n        <div className=\"Buttons\">\r\n          <button onClick={OkOverlayFn} className=\"select\">\r\n            {\"OK \\u2713\"}\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setIsBaseOverlayActive(false);\r\n              closeOverlayFn();\r\n            }}\r\n            className=\"close\"\r\n          >\r\n            {\"Cancel \\u00D7\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport \"./UploadImageOverlay.scss\";\r\nimport Overlay from \"./Overlay\";\r\n\r\nimport { pasteHtmlAtCaret } from \"./extras/uploadImage\";\r\n\r\nconst UploadImageSection = (props) => {\r\n  const { setImageType, setFile, setImageURL, setURI } = props.contentProps;\r\n\r\n  const handleUpload = (e) => {\r\n    setImageType(\"file\");\r\n    const file = e.target.files?.[0];\r\n    setFile(file);\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onload = () => {\r\n      //   console.log(\"readerResult: \", reader.result);\r\n      setURI(reader.result);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"uploadSection\">\r\n      <label htmlFor=\"\">Paste URL of image</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          setImageURL(e.target.value);\r\n          setImageType(\"url\");\r\n        }}\r\n      />\r\n      <br />\r\n      <br />\r\n      <div>\r\n        <b>\r\n          <center>OR</center>{\" \"}\r\n        </b>{\" \"}\r\n      </div>\r\n      <br />\r\n      <label htmlFor=\"\">Choose image to upload</label>\r\n      <input\r\n        type=\"file\"\r\n        className=\"uploadImageInput\"\r\n        accept=\"image/*\"\r\n        onChange={handleUpload}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UploadImageOverlay = (props) => {\r\n  const [imageURL, setImageURL] = useState(\"\");\r\n  const [file, setFile] = useState({});\r\n  const [uri, setURI] = useState(\"\");\r\n\r\n  //url or file\r\n  const [imageType, setImageType] = useState(\"\");\r\n\r\n  const {\r\n    setIsBaseOverlayActive,\r\n    // sel,\r\n    setExpandedOptionsVisibilityState,\r\n    range,\r\n    setHtml,\r\n  } = props;\r\n\r\n  const contentProps = {\r\n    imageURL,\r\n    setImageURL,\r\n    file,\r\n    setFile,\r\n    imageType,\r\n    setImageType,\r\n    setURI,\r\n  };\r\n\r\n  const uploadImage = () => {\r\n    let ihtml = \"\";\r\n    console.log(\"okupload\");\r\n\r\n    if (imageType === \"url\") {\r\n      ihtml = `<img style=\"max-height: 350px;\" src=\"${imageURL}\" >`;\r\n    } else if (imageType === \"file\") {\r\n      ihtml = `<img style=\"max-height: 350px;\" src=\"${uri}\" >`;\r\n    }\r\n\r\n    console.log(\"ihtml: \", ihtml);\r\n    setHtml(ihtml);\r\n    // pasteHtmlAtCaret(html);\r\n    setIsBaseOverlayActive(false);\r\n    setExpandedOptionsVisibilityState(false);\r\n  };\r\n\r\n  const doNothing = () => {\r\n    setIsBaseOverlayActive(false);\r\n    setFile({});\r\n    setImageURL(\"\");\r\n    setImageType(\"\");\r\n    console.log(\"cancel upload\");\r\n  };\r\n\r\n  return (\r\n    <Overlay\r\n      setIsBaseOverlayActive={setIsBaseOverlayActive}\r\n      closeOverlayFn={doNothing}\r\n      OkOverlayFn={uploadImage}\r\n    >\r\n      <UploadImageSection contentProps={contentProps} />\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nexport default UploadImageOverlay;\r\n","export const SOURCE = \"formattedNotes\";\r\nexport const SINGLE_SOURCE = \"formatedNotes_single\";\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport \"./Editor.scss\";\r\nimport ContentEditable from \"react-contenteditable\";\r\n\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nimport PasswordOverlay from \"./PasswordOverlay\";\r\nimport ExpandedOptions from \"./ExpandedOptions\";\r\nimport UploadImageOverlay from \"./UploadImageOverlay\";\r\n\r\nimport { SOURCE, SINGLE_SOURCE } from \"./constants\";\r\nimport { findNote } from \"./helper\";\r\nimport { pasteHtmlAtCaret } from \"./extras/uploadImage\";\r\n\r\nconst Editor = (props) => {\r\n  const ref = useRef();\r\n  const [isSaveEnabled, setIsSaveEnabled] = useState(false);\r\n  const [isoverlayActive, setIsoverlayActive] = useState(false);\r\n  const [expandedOptionsVisibilityState, setExpandedOptionsVisibilityState] =\r\n    useState(false);\r\n  // const [sel, setSel] = useState({});\r\n  const [range, setRange] = useState({});\r\n  const [html, setHtml] = useState(\"\");\r\n\r\n  // password, title\r\n  const [overlayType, setOverlayType] = useState(\"\");\r\n\r\n  const toggleExpandVisibilityState = () => {\r\n    setExpandedOptionsVisibilityState(!expandedOptionsVisibilityState);\r\n  };\r\n\r\n  const {\r\n    setIsEditorActive,\r\n    isEditorActive,\r\n    editingNote,\r\n    setEditingNote,\r\n    setNotes,\r\n    notes,\r\n    deleteNote,\r\n    isBaseOverlayActive,\r\n    setIsBaseOverlayActive,\r\n  } = props;\r\n\r\n  const storeRange = () => {\r\n    const sel = window.getSelection();\r\n    const r = sel.getRangeAt(0);\r\n    const rclone = r.cloneRange();\r\n\r\n    setRange(rclone);\r\n  };\r\n\r\n  const [encryptionState, setEncryptionState] = useState(\"encrypt\");\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(editingNote).length > 0) {\r\n      setEncryptionState(editingNote.isEncrypted ? \"decrypt\" : \"encrypt\");\r\n    }\r\n  }, [editingNote.isEncrypted]);\r\n\r\n  useEffect(() => {\r\n    if (!isEditorActive) {\r\n      setExpandedOptionsVisibilityState(false);\r\n    }\r\n  }, [isEditorActive]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useeffect html: \", html);\r\n    if (html && html.length > 5) {\r\n      pasteHtmlAtCaret(html, null, range);\r\n      // setTimeout(() => {}, 1000);\r\n    }\r\n  }, [html]);\r\n\r\n  const encrypt = (texto, pass) => {\r\n    const encrypted = CryptoJS.AES.encrypt(texto, pass);\r\n    return encrypted;\r\n  };\r\n\r\n  const decrypt = (texto, pass) => {\r\n    // debugger;\r\n    const decrypted = CryptoJS.AES.decrypt(texto, pass);\r\n    const res = decrypted.toString(CryptoJS.enc.Utf8);\r\n    // debugger;\r\n    return res;\r\n  };\r\n\r\n  const save = (state = \"null\", value = \"\", encState = \"\") => {\r\n    // debugger;\r\n    // const patt = /<\\/*[a-z]+>/g;\r\n    const patt = /<\\/*[^>]+>/g;\r\n    let str;\r\n    let obj;\r\n    const updatedNotes = [...notes];\r\n\r\n    let pos = updatedNotes.findIndex((ele) => ele.id === editingNote.id);\r\n    if (state === \"encrypt\") {\r\n      str = \"\";\r\n      if (encState === \"encrypt\") {\r\n        if (value === undefined) {\r\n          console.log(\"some err\");\r\n          return;\r\n        }\r\n\r\n        str = value.split(patt).join(\" \");\r\n        str = str.replace(/&nbsp;/g, \" \");\r\n      }\r\n      obj = {\r\n        id: editingNote.id,\r\n        fmtext: value,\r\n        rawtext: str,\r\n        isEncrypted: encState === \"decrypt\",\r\n        title: editingNote.title,\r\n      };\r\n    } else if (state === \"assignTitle\") {\r\n      obj = {\r\n        id: editingNote.id,\r\n        fmtext: editingNote.fmtext,\r\n        rawtext: editingNote.rawtext,\r\n        isEncrypted: encState === \"decrypt\",\r\n        title: value,\r\n      };\r\n    } else {\r\n      str = editingNote.fmtext.split(patt).join(\" \");\r\n      str = str.replace(/&nbsp;/g, \" \");\r\n      console.log(\"rawstring: \", str);\r\n      obj = {\r\n        id: editingNote.id,\r\n        fmtext: editingNote.fmtext,\r\n        rawtext: str,\r\n        isEncrypted: encState === \"decrypt\",\r\n        title: editingNote.title,\r\n      };\r\n    }\r\n\r\n    if (pos === -1) {\r\n      updatedNotes.push(obj);\r\n    } else {\r\n      updatedNotes[pos] = obj;\r\n    }\r\n\r\n    setNotes(updatedNotes);\r\n  };\r\n\r\n  const assignTitle = (title) => {\r\n    if (title.length > 100) {\r\n      alert(\"Title is too long\");\r\n      return;\r\n    }\r\n    setIsoverlayActive(false);\r\n    setEditingNote({ ...editingNote, title: title });\r\n    save(\"assignTitle\", title);\r\n  };\r\n\r\n  const Encrypt = () => {\r\n    if (editingNote.fmtext.length === 0) {\r\n      alert(\"Type something first\");\r\n      return;\r\n    }\r\n    setOverlayType(\"password\");\r\n    setIsoverlayActive(true);\r\n  };\r\n\r\n  const Encrypting = (pass) => {\r\n    const str = editingNote.fmtext;\r\n    // debugger;\r\n    // console.log(\"editingnote: \", str);\r\n    let value;\r\n    let encState;\r\n    if (encryptionState === \"encrypt\") {\r\n      encState = \"decrypt\";\r\n      const encryptedText = encrypt(str, pass).toString();\r\n\r\n      value = encryptedText;\r\n      setEditingNote({ ...editingNote, fmtext: encryptedText });\r\n    } else {\r\n      const decryptedText = decrypt(str, pass);\r\n      // debugger;\r\n      if (decryptedText.length === 0) {\r\n        alert(\"Wrong Password.Try again\");\r\n\r\n        return;\r\n      }\r\n\r\n      encState = \"encrypt\";\r\n      value = decryptedText;\r\n      setEditingNote({ ...editingNote, fmtext: decryptedText });\r\n    }\r\n    setIsoverlayActive(false);\r\n    setEncryptionState(encState);\r\n    save(\"encrypt\", value, encState);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setEditingNote({ ...editingNote, fmtext: e.target.value });\r\n    setIsSaveEnabled(true);\r\n    // setSel(window.getSelection());\r\n    // setRange(window.getSelection().getRangeAt(0));\r\n  };\r\n\r\n  const close = () => {\r\n    setIsEditorActive(false);\r\n    setEditingNote({});\r\n    setIsSaveEnabled(false);\r\n  };\r\n\r\n  const deleteFn = () => {\r\n    setIsEditorActive(false);\r\n    setIsSaveEnabled(false);\r\n    deleteNote(editingNote.id);\r\n  };\r\n\r\n  const passwordNote = () => {\r\n    if (overlayType === \"password\") {\r\n      return encryptionState === \"encrypt\" ? (\r\n        <div className=\"passwordNote\">\r\n          <span>Note: </span> Make sure to remember the password. Only this\r\n          password will be able to decrypt the current note.\r\n        </div>\r\n      ) : (\r\n        <div className=\"passwordNote\">\r\n          Type the password which you have used to encrypt this before to\r\n          decrypt it.\r\n        </div>\r\n      );\r\n    } else if (overlayType === \"title\") {\r\n      return (\r\n        <div className=\"passwordNote\">\r\n          Assign the current note a name or title to help to identify a note\r\n          when its encrypted.\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div className=\"passwordNote\"></div>;\r\n    }\r\n  };\r\n\r\n  const exp = () => {\r\n    console.log(\"exportEach\");\r\n    const source = SINGLE_SOURCE;\r\n    const singleNote = findNote(editingNote, notes);\r\n    if (!singleNote) {\r\n      alert(\"Make sure to save the current note first\");\r\n      return;\r\n    }\r\n    const arrString = JSON.stringify({ source, singleNote });\r\n    // console.log(arrString);\r\n    const blob = new Blob([arrString], { type: \"text/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.download = `exportNote${singleNote.id}.json`;\r\n    link.href = url;\r\n    link.click();\r\n    setExpandedOptionsVisibilityState(false);\r\n  };\r\n\r\n  const openUploadOption = () => {\r\n    setIsBaseOverlayActive(true);\r\n  };\r\n\r\n  const optionarr = [\r\n    { icon: \"fa fa-trash\", name: \"Delete\", onclickEvent: deleteFn },\r\n    { icon: \"fa-solid fa-file-export\", name: \"Export\", onclickEvent: exp },\r\n    {\r\n      icon: \"fa-solid fa-upload\",\r\n      name: \"Upload Image\",\r\n      onclickEvent: openUploadOption,\r\n    },\r\n  ];\r\n\r\n  const heading = editingNote.title ? editingNote.title : \"Untitled\";\r\n  const editHTML =\r\n    encryptionState === \"decrypt\"\r\n      ? \"Locked\"\r\n      : editingNote.fmtext\r\n      ? editingNote.fmtext\r\n      : \"\";\r\n\r\n  return (\r\n    <div className={`EditorContainer ${isEditorActive ? \"active\" : \"\"}`}>\r\n      <div className={`Editor ${isEditorActive ? \"active\" : \"\"}`}>\r\n        {isBaseOverlayActive ? (\r\n          <UploadImageOverlay\r\n            setIsBaseOverlayActive={setIsBaseOverlayActive}\r\n            setExpandedOptionsVisibilityState={\r\n              setExpandedOptionsVisibilityState\r\n            }\r\n            range={range}\r\n            setHtml={setHtml}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {isoverlayActive ? (\r\n          <PasswordOverlay\r\n            label={overlayType === \"password\" ? \"Password\" : \"Title\"}\r\n            passwordNote={passwordNote()}\r\n            onSave={overlayType === \"password\" ? Encrypting : assignTitle}\r\n            setIsoverlayActive={setIsoverlayActive}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <header className=\"options\">\r\n          <div className=\"leftButtons\">\r\n            <button\r\n              title=\"Close current note\"\r\n              onClick={close}\r\n              className=\"close\"\r\n            >\r\n              {\"\\u00D7\"}\r\n            </button>\r\n            <div className=\"title\">\r\n              <span title={heading}>{heading}</span>\r\n              <button\r\n                onClick={() => {\r\n                  setOverlayType(\"title\");\r\n                  setIsoverlayActive(true);\r\n                }}\r\n                className=\"editTitle\"\r\n              >\r\n                {/* <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> */}\r\n                <i class=\"fa-solid fa-pencil\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"rightButtons\">\r\n            <button\r\n              title={`Current note is in ${\r\n                encryptionState === \"decrypt\" ? \"encrypted\" : \"decrypted\"\r\n              } form. Click to ${encryptionState} it.`}\r\n              onClick={Encrypt}\r\n              className=\"encrypt\"\r\n            >\r\n              <i\r\n                class={`fa fa-${\r\n                  encryptionState === \"encrypt\" ? \"lock-open\" : \"lock\"\r\n                }`}\r\n                aria-hidden=\"true\"\r\n              ></i>\r\n            </button>\r\n\r\n            <button\r\n              title=\"Save current note\"\r\n              onClick={isSaveEnabled ? save : null}\r\n              className={`save ${isSaveEnabled ? \"active\" : \"\"}`}\r\n            >\r\n              {\"\\u2713\"}\r\n            </button>\r\n            <button\r\n              onClick={toggleExpandVisibilityState}\r\n              title=\"Expand more options\"\r\n              className={`threedots`}\r\n            >\r\n              <i class=\"fa fa-ellipsis-v\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          </div>\r\n        </header>\r\n        <div className=\"titleBar\">{heading}</div>\r\n        <div className=\"article\">\r\n          <ContentEditable\r\n            className=\"edit\"\r\n            html={editHTML}\r\n            innerRef={ref}\r\n            onChange={handleChange}\r\n            onClick={storeRange}\r\n            onKeyPress={storeRange}\r\n          />\r\n        </div>\r\n        <ExpandedOptions\r\n          state={expandedOptionsVisibilityState}\r\n          options={optionarr}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","export function pasteHtmlAtCaret(html, sel = null, range = null) {\r\n  console.log(\"html: \", html);\r\n\r\n  var sel, range;\r\n  if (window.getSelection) {\r\n    // IE9 and non-IE\r\n    if (sel === null) sel = window.getSelection();\r\n    if (sel.getRangeAt && sel.rangeCount) {\r\n      // get selected area details\r\n      if (range === null) range = sel.getRangeAt(0);\r\n\r\n      console.log(\"range: \", range);\r\n\r\n      //deleting the selected region\r\n      range.deleteContents();\r\n\r\n      // Range.createContextualFragment() would be useful here but is\r\n      // non-standard and not supported in all browsers (IE9, for one)\r\n      var el = document.createElement(\"div\");\r\n      el.innerHTML = html;\r\n\r\n      // offscreen dom tree creation as inserted between instead of last\r\n      var frag = document.createDocumentFragment(),\r\n        node,\r\n        lastNode;\r\n\r\n      //   extract elements from div container and appending it to document fragment\r\n      while ((node = el.firstChild)) {\r\n        lastNode = frag.appendChild(node);\r\n      }\r\n\r\n      range.insertNode(frag);\r\n\r\n      // Preserve the selection\r\n      if (lastNode) {\r\n        range = range.cloneRange();\r\n\r\n        // to unselect and push caret to last\r\n        range.setStartAfter(lastNode);\r\n        range.collapse(true);\r\n\r\n        // if not removed then cursor wont be at last\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n      }\r\n    }\r\n  } else if (document.selection && document.selection.type != \"Control\") {\r\n    // IE < 9\r\n    document.selection.createRange().pasteHTML(html);\r\n  }\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./Search.scss\";\r\nimport { improvedSearch } from \"./helper\";\r\n\r\nconst Search = (props) => {\r\n  const { setIsSearching, notes, setSearchedNotes } = props;\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (notes.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (searchValue.length === 0) {\r\n      setIsSearching(false);\r\n      setSearchedNotes([]);\r\n      return;\r\n    }\r\n\r\n    let sNotes = notes.filter(\r\n      (note) =>\r\n        (note?.title !== \"Untitled\" &&\r\n          improvedSearch(note?.title, searchValue)) ||\r\n        improvedSearch(note?.rawtext, searchValue)\r\n    );\r\n\r\n    setIsSearching(true);\r\n    setSearchedNotes(sNotes);\r\n    return;\r\n\r\n    let searchednotes = [];\r\n    for (let note of notes) {\r\n      let text = note.rawtext;\r\n      const title = note.title;\r\n      if (title === \"Untitled\") {\r\n      }\r\n      let words = text.split(\" \");\r\n\r\n      const len = searchValue.length;\r\n      const pos = words.findIndex(\r\n        (word) =>\r\n          word.substr(0, len).toLowerCase() === searchValue.toLowerCase()\r\n      );\r\n      if (pos === -1) {\r\n        continue;\r\n      }\r\n\r\n      searchednotes.push(note);\r\n    }\r\n\r\n    setIsSearching(true);\r\n    setSearchedNotes(searchednotes);\r\n  }, [searchValue]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        className=\"searchInput\"\r\n        type=\"text\"\r\n        placeholder=\"Search notes\"\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./App.scss\";\r\n\r\nimport Notes from \"./Notes\";\r\nimport Editor from \"./Editor\";\r\nimport Search from \"./Search\";\r\nimport PasswordOverlay from \"./PasswordOverlay\";\r\n\r\nimport { generate_token } from \"./helper\";\r\nimport { SOURCE, SINGLE_SOURCE } from \"./constants\";\r\n\r\nfunction App() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [searchedNotes, setSearchedNotes] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [currentTheme, setCurrentTheme] = useState(\"light\");\r\n\r\n  const [isEditorActive, setIsEditorActive] = useState(false);\r\n  const [editingNote, setEditingNote] = useState({});\r\n  const [idgenerate, setIdgenerate] = useState(0);\r\n  const [html, setHtml] = useState(\"\");\r\n\r\n  const [isImportSingleNoteActive, setIsImportSingleNoteActive] =\r\n    useState(false);\r\n  const [isImportAllNoteActive, setIsImportAllNoteActive] = useState(false);\r\n\r\n  const [isBaseOverlayActive, setIsBaseOverlayActive] = useState(false);\r\n\r\n  const deleteNote = (id) => {\r\n    const updatedNotes = [...notes];\r\n    const pos = updatedNotes.findIndex((ele) => ele.id === id);\r\n    updatedNotes.splice(pos, 1);\r\n    setNotes(updatedNotes);\r\n  };\r\n\r\n  const exp = () => {\r\n    console.log(\"exportall\");\r\n    const noteID = localStorage.getItem(\"noteID\");\r\n    const source = localStorage.getItem(\"source\");\r\n    const arrString = JSON.stringify({ noteID, source, notes });\r\n    // console.log(arrString);\r\n    const blob = new Blob([arrString], { type: \"text/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.download = \"export.json\";\r\n    link.href = url;\r\n    link.click();\r\n  };\r\n\r\n  const invertColors = (theme) => {\r\n    const invertPercent = theme === \"dark\" ? 100 : 0;\r\n    const css = `.App {\r\n      -webkit-filter: invert(${invertPercent}%);\r\n      -moz-filter: invert(${invertPercent}%);\r\n      -o-filter: invert(${invertPercent}%);\r\n      -ms-filter: invert(${invertPercent}%);\r\n    }\r\n\r\n    \r\n\r\n    \r\n    img,video,iframe{\r\n      -webkit-filter: invert(${invertPercent}%);\r\n      -moz-filter: invert(${invertPercent}%);\r\n      -o-filter: invert(${invertPercent}%);\r\n      -ms-filter: invert(${invertPercent}%);\r\n    }\r\n    \r\n    `;\r\n    const head = document.head;\r\n    const style = document.createElement(\"style\");\r\n    style.type = \"text/css\";\r\n    if (style.styleSheet) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild(document.createTextNode(css));\r\n    }\r\n    head.appendChild(style);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const notestring = localStorage.getItem(\"notes\");\r\n    if (notestring && notestring.length > 0) {\r\n      const noteobj = JSON.parse(notestring);\r\n      setNotes(noteobj);\r\n    }\r\n    let currId = localStorage.getItem(\"noteID\");\r\n    if (currId) {\r\n      setIdgenerate(Number(currId));\r\n    } else {\r\n      localStorage.setItem(\"noteID\", \"0\");\r\n    }\r\n\r\n    let source = localStorage.getItem(\"source\");\r\n    if (!source) {\r\n      localStorage.setItem(\"source\", \"formattedNotes\");\r\n    }\r\n\r\n    // invertColors();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const arrString = JSON.stringify(notes);\r\n    localStorage.setItem(\"notes\", arrString);\r\n    console.log(\"notes: \", notes);\r\n  }, [notes]);\r\n\r\n  const toggleTheme = () => {\r\n    if (currentTheme === \"light\") {\r\n      setCurrentTheme(\"dark\");\r\n      invertColors(\"dark\");\r\n    } else {\r\n      setCurrentTheme(\"light\");\r\n      invertColors(\"light\");\r\n    }\r\n  };\r\n\r\n  const openNewNote = () => {\r\n    setIsEditorActive(true);\r\n    const obj = {\r\n      id: idgenerate,\r\n      fmtext: \"\",\r\n      isEncrypted: false,\r\n      title: \"Untitled\",\r\n    };\r\n\r\n    setEditingNote(obj);\r\n    setIdgenerate(idgenerate + 1);\r\n    localStorage.setItem(\"noteID\", (idgenerate + 1).toString());\r\n  };\r\n\r\n  const importSingle = (file) => {\r\n    console.log(\"import_single: \", file);\r\n    const fr = new FileReader();\r\n    fr.onload = () => {\r\n      const obj = JSON.parse(fr.result);\r\n      console.log(\"importedFile: \", obj);\r\n      if (!obj.source || obj.source !== SINGLE_SOURCE) {\r\n        alert(\"Wrong file\");\r\n        return;\r\n      }\r\n\r\n      const objNote = { ...obj.singleNote, id: idgenerate };\r\n\r\n      const tempNotes = [...notes, objNote];\r\n      setNotes(tempNotes);\r\n\r\n      setIdgenerate(idgenerate + 1);\r\n      localStorage.setItem(\"noteID\", (idgenerate + 1).toString());\r\n    };\r\n\r\n    if (file) fr.readAsText(file);\r\n    setIsImportSingleNoteActive(false);\r\n  };\r\n\r\n  const importAll = (file) => {\r\n    console.log(\"import_all: \", file);\r\n    const fr = new FileReader();\r\n    fr.onload = () => {\r\n      const obj = JSON.parse(fr.result);\r\n      console.log(\"importedFile: \", obj);\r\n      if (!obj.source || obj.source !== SOURCE) {\r\n        alert(\"Wrong file\");\r\n        return;\r\n      }\r\n\r\n      // const objNote = { ...obj.singleNote, id: idgenerate };\r\n\r\n      const tempNotes = [...obj.notes];\r\n      setNotes(tempNotes);\r\n      localStorage.setItem(\"noteID\", obj.noteID);\r\n    };\r\n\r\n    if (file) fr.readAsText(file);\r\n    setIsImportSingleNoteActive(false);\r\n  };\r\n\r\n  const importSingleNote = \"Import the json file of a note to be imported\";\r\n  const importAllNote = \"Import the json file containing whole workspace\";\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Search\r\n        setIsSearching={setIsSearching}\r\n        notes={notes}\r\n        setSearchedNotes={setSearchedNotes}\r\n      />\r\n      <Notes\r\n        setIsEditorActive={setIsEditorActive}\r\n        notes={isSearching ? searchedNotes : notes}\r\n        setEditingNote={setEditingNote}\r\n        deleteNote={deleteNote}\r\n      />\r\n\r\n      {isImportSingleNoteActive ? (\r\n        <PasswordOverlay\r\n          isInputJSON={true}\r\n          onSave={importSingle}\r\n          setIsoverlayActive={setIsImportSingleNoteActive}\r\n          passwordNote={importSingleNote}\r\n          label=\"Upload file\"\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {isImportAllNoteActive ? (\r\n        <PasswordOverlay\r\n          isInputJSON={true}\r\n          onSave={importAll}\r\n          setIsoverlayActive={setIsImportAllNoteActive}\r\n          passwordNote={importAllNote}\r\n          label=\"Upload file\"\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <button title=\"Export notes\" className=\"exportAll\" onClick={exp}>\r\n        <i className=\"fa-solid fa-file-export\"></i>\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          setIsImportSingleNoteActive(true);\r\n        }}\r\n        title=\"Import single note\"\r\n        className=\"importSingle\"\r\n      >\r\n        <i class=\"fa-solid fa-upload\"></i>\r\n      </button>\r\n\r\n      <button\r\n        onClick={() => {\r\n          setIsImportAllNoteActive(true);\r\n        }}\r\n        title=\"Import all notes\"\r\n        className=\"importAll\"\r\n      >\r\n        <i class=\"fa-solid fa-file-import\"></i>\r\n      </button>\r\n\r\n      <button onClick={openNewNote} className=\"addNew\">\r\n        {\"\\u002B\"}\r\n      </button>\r\n      <button onClick={toggleTheme} className=\"toggleTheme\">\r\n        <i\r\n          class={`fa-solid fa-${currentTheme === \"light\" ? \"sun\" : \"moon\"}`}\r\n          aria-hidden=\"true\"\r\n        ></i>\r\n      </button>\r\n\r\n      <Editor\r\n        editingNote={editingNote}\r\n        setEditingNote={setEditingNote}\r\n        isEditorActive={isEditorActive}\r\n        setIsEditorActive={setIsEditorActive}\r\n        notes={notes}\r\n        setNotes={setNotes}\r\n        deleteNote={deleteNote}\r\n        isBaseOverlayActive={isBaseOverlayActive}\r\n        setIsBaseOverlayActive={setIsBaseOverlayActive}\r\n        setHtml={setHtml}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  /* </React.StrictMode> */\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}